{"version":3,"sources":["sortingAlgorithms/sortingAlgorithms.js","SortingVisualizer/SplitButton.jsx","SortingVisualizer/ContinuousSlider.jsx","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSort","mainArray","start","end","middle","Math","floor","k","i","j","push","merge","getBubbleSortAnimations","swapped","swap","bubbleSort","getQuickSortAnimations","quickSort","index","pivotValue","pivotIndex","partition","getHeapSortAnimations","bubbleDown","buildMaxHeap","heapSort","left","right","parent","getRightChildIndex","largest","getSelectionSortAnimations","min","selectionSort","getInsertionSortAnimations","insertionSort","iVal","options","SplitButton","props","React","useState","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClose","event","current","contains","target","Grid","container","direction","alignItems","item","xs","ButtonGroup","variant","color","ref","aria-label","Button","onClick","size","aria-controls","undefined","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","map","option","MenuItem","key","selected","handleMenuItemClick","useStyles","makeStyles","root","width","ContinuousSlider","classes","value","setValue","className","Typography","gutterBottom","spacing","Slider","defaultValue","onChange","newValue","changeSpeed","aria-labelledby","valueLabelDisplay","theme","createMuiTheme","palette","primary","main","blue","SortingVisualizer","state","window","innerWidth","height","innerHeight","speed","updateWindowDimensions","bind","this","resetArray","addEventListener","setState","noBars","heightBars","random","arrayBars","document","getElementsByClassName","barOneIndex","barTwoIndex","barOneStyle","barTwoStyle","setTimeout","backgroundColor","newHeight","barOneHeight","barTwoHeight","console","log","val","changeAnimationSpeed","Component","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.caec8238.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\r\n\r\n        const animations = [];\r\n        if(array.length<=1){\r\n            return array;\r\n        }\r\n        const auxiliaryArray = array.slice();\r\n        mergeSort(array,0,array.length-1,auxiliaryArray,animations);\r\n        return animations;\r\n}\r\n\r\nfunction mergeSort(mainArray, start, end, auxiliaryArray, animations){\r\n    if(start === end){\r\n        return;\r\n    }\r\n\r\n    const middle = Math.floor((start+end)/2);\r\n    mergeSort(auxiliaryArray,start,middle,mainArray,animations);\r\n    mergeSort(auxiliaryArray,middle+1,end,mainArray,animations);\r\n    merge(mainArray,start,middle,end,auxiliaryArray,animations);\r\n}\r\n\r\nfunction merge(mainArray, start, middle, end, auxiliaryArray, animations){\r\n    let k = start;\r\n    let i = start;\r\n    let j = middle + 1;\r\n    while(i<=middle && j<=end){\r\n        //This is what we are comparing, push them once to change colors, push them twice to revert colors\r\n        animations.push([i,j]);\r\n        animations.push([i,j]);\r\n        if(auxiliaryArray[i]<=auxiliaryArray[j]){\r\n            animations.push([k,auxiliaryArray[i]]);\r\n            mainArray[k++] = auxiliaryArray[i++];\r\n        }\r\n        else {\r\n            animations.push([k,auxiliaryArray[j]]);\r\n            mainArray[k++] = auxiliaryArray[j++];\r\n        }\r\n    }\r\n\r\n    while(i<=middle){\r\n        animations.push([i,i]);\r\n        animations.push([i,i]);\r\n        animations.push([k,auxiliaryArray[i]]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n\r\n    while(j<=end){\r\n        animations.push([j,j]);\r\n        animations.push([j,j]);\r\n        animations.push([k,auxiliaryArray[j]]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n}\r\n\r\nexport function getBubbleSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length<=1){\r\n        return array;\r\n    }\r\n    const auxiliaryArray = array.slice();\r\n    bubbleSort(auxiliaryArray,animations);\r\n    return animations;\r\n}\r\n\r\nfunction bubbleSort(array, animations){\r\n    let swapped = true;\r\n    do {\r\n        \r\n        swapped = false;\r\n        for(let i = 0; i<array.length-1; i++){\r\n            animations.push([i,i+1]);\r\n            animations.push([i,i+1]);\r\n            if(array[i]>array[i+1]){\r\n                animations.push([i,i+1])\r\n                array = swap(array,i,i+1)\r\n                swapped = true;\r\n            }\r\n            else{\r\n                animations.push([i,i])\r\n            }\r\n        }\r\n    }\r\n    while(swapped);\r\n}\r\n\r\nexport function getQuickSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length<=1){\r\n        return array;\r\n    }\r\n    const auxiliaryArray = array.slice();\r\n    quickSort(auxiliaryArray,0,array.length-1,animations);\r\n    return animations;\r\n}\r\n\r\nfunction quickSort(array, start, end, animations){\r\n    if(start>=end){\r\n        return;\r\n    }\r\n    let index = partition(array, start, end, animations);\r\n    quickSort(array, start, index-1, animations);\r\n    quickSort(array, index+1, end, animations);\r\n}\r\n\r\nfunction partition(array, start, end, animations){\r\n    const pivotValue = array[end];\r\n    let pivotIndex = start;\r\n    for(let i = start; i<end; i++){\r\n        animations.push([i,end]);\r\n        animations.push([i,end]);\r\n        if(array[i]<pivotValue){\r\n            animations.push([i,pivotIndex])\r\n            array = swap(array, i, pivotIndex);\r\n            pivotIndex++;\r\n        }\r\n        else{\r\n            animations.push([i,i]);\r\n        }\r\n        if(i<end-1){\r\n            animations.push([i,i]);\r\n        }\r\n    }\r\n    array = swap(array, pivotIndex, end);\r\n    animations.push([pivotIndex, end]);\r\n    return pivotIndex;\r\n}\r\n\r\nexport function getHeapSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length<=1){\r\n        return array;\r\n    }\r\n    const auxiliaryArray = array.slice();\r\n    heapSort(auxiliaryArray,animations);\r\n    return animations;\r\n}\r\n\r\nfunction heapSort(array, animations){\r\n    array = buildMaxHeap(array, animations);\r\n    for(let i = array.length-1; i>=0; i--){\r\n        animations.push([0,i]);\r\n        animations.push([0,i]);\r\n        animations.push([0,i]);\r\n        animations.push([0,i]);\r\n        animations.push([0,i]);\r\n        array = swap(array, 0, i);\r\n        array = bubbleDown(array,0,i-1,animations);\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction bubbleDown(array, index, end, animations){\r\n    const left = getLeftChildIndex(index);\r\n    const right = getRightChildIndex(index);\r\n    let largest = index;\r\n    if(left<=end){\r\n        animations.push([left,index]);\r\n        animations.push([left,index]);\r\n    }\r\n    else{\r\n        animations.push([index,index]);\r\n        animations.push([index,index]);\r\n    }\r\n    if(left <= end && array[left] > array[index]){\r\n        largest = left;\r\n    }\r\n\r\n    if(right<=end){\r\n        animations.push([right,index]);\r\n        animations.push([right,index]);\r\n    }\r\n    else{\r\n        animations.push([index,index]);\r\n        animations.push([index,index]);\r\n    }\r\n    if(right <= end && array[right] > array[largest]){\r\n        largest = right;\r\n    }\r\n\r\n    if(largest !== index){\r\n        animations.push([largest,index]);\r\n        array = swap(array, largest, index);\r\n        array = bubbleDown(array, largest, end, animations);\r\n    }\r\n    else{\r\n        animations.push([index,index]);\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction buildMaxHeap(array, animations){\r\n    for(let i=Math.floor(array.length/2)-1; i>=0 ; i--){\r\n        array = bubbleDown(array,i,array.length-1, animations);\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction getLeftChildIndex(parent){\r\n    return 2*parent + 1;\r\n}\r\n\r\nfunction getRightChildIndex(parent){\r\n    return 2*parent + 2;\r\n}\r\n\r\nexport function getSelectionSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length<=1){\r\n        return array;\r\n    }\r\n    const auxiliaryArray = array.slice();\r\n    selectionSort(auxiliaryArray,animations);\r\n    return animations;\r\n}\r\n\r\nfunction selectionSort(array,animations){\r\n    for (let i = 0; i < array.length; i++) {\r\n        let min = i;\r\n        for (let j = i + 1; j < array.length; j++) {\r\n            animations.push([min,j]);\r\n            animations.push([min,j]);\r\n            if (array[min] > array[j]) {\r\n                min = j;\r\n            }\r\n            if(j<array.length-1){\r\n                animations.push([min,min]);\r\n            }\r\n        }\r\n        if (min !== i) {\r\n            array=swap(array,min,i);\r\n            animations.push([min,i])\r\n        }\r\n        else{\r\n            animations.push([min,min])\r\n        }\r\n    }\r\n    animations.push([array.length-1,array.length-1]);\r\n    return array;\r\n}\r\n\r\nexport function getInsertionSortAnimations(array){\r\n    const animations = [];\r\n    if(array.length<=1){\r\n        return array;\r\n    }\r\n    const auxiliaryArray = array.slice();\r\n    insertionSort(auxiliaryArray,animations);\r\n    return animations;\r\n}\r\n\r\nfunction insertionSort(array,animations){\r\n    for(let i = 1; i<array.length; i++){\r\n        let j = i;\r\n        while(j>0){\r\n            if(array[j-1]>array[j]){\r\n                animations.push([j,j-1]);\r\n                animations.push([j,j-1]);\r\n                animations.push([j,j-1]);\r\n                array=swap(array,j,j-1);\r\n            }\r\n            else{\r\n                animations.push([-1,-1]);\r\n                animations.push([-1,-1]);\r\n                animations.push([j,j]);\r\n            }\r\n            j--;\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction swap(array,i,j){\r\n    const iVal= array[i];\r\n    array[i] = array[j];\r\n    array[j] = iVal;\r\n    return array;\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\nconst options = ['Merge Sort', 'Quick Sort', 'Bubble Sort', 'Selection Sort', 'Insertion Sort', 'Heap Sort'];\r\n\r\nexport default function SplitButton(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  const handleClick = () => {\r\n    switch(selectedIndex){\r\n      case 0:\r\n        props.mergeSort();\r\n        break;\r\n      case 1:\r\n        props.quickSort();\r\n        break;\r\n      case 2:\r\n        props.bubbleSort();\r\n        break;\r\n      case 3:\r\n        props.selectionSort();\r\n        break;\r\n      case 4:\r\n        props.insertionSort();\r\n        break;\r\n      case 5:\r\n        props.heapSort();\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen(prevOpen => !prevOpen);\r\n  };\r\n\r\n  const handleClose = event => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"center\">\r\n      <Grid item xs={12}>\r\n        <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n          <Button onClick={handleClick}>{options[selectedIndex]}</Button>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            aria-controls={open ? 'split-button-menu' : undefined}\r\n            aria-expanded={open ? 'true' : undefined}\r\n            aria-label=\"select merge strategy\"\r\n            aria-haspopup=\"menu\"\r\n            onClick={handleToggle}\r\n          >\r\n            <ArrowDropDownIcon />\r\n          </Button>\r\n        </ButtonGroup>\r\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList id=\"split-button-menu\">\r\n                    {options.map((option, index) => (\r\n                      <MenuItem\r\n                        key={option}\r\n                        selected={index === selectedIndex}\r\n                        onClick={event => handleMenuItemClick(event, index)}\r\n                      >\r\n                        {option}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 200,\r\n  },\r\n});\r\n\r\nexport default function ContinuousSlider(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(4);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    props.changeSpeed(newValue);\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"continuous-slider\" gutterBottom>\r\n        Animation Speed\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs>\r\n          <Slider min={1} defaultValue={props.defaultValue} value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\" valueLabelDisplay=\"on\" />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport './SortingVisualizer.css';\r\nimport {getMergeSortAnimations, getBubbleSortAnimations, getQuickSortAnimations, getHeapSortAnimations, getSelectionSortAnimations, getInsertionSortAnimations} from '../sortingAlgorithms/sortingAlgorithms';\r\nimport { Button } from '@material-ui/core';\r\nimport { MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue'\r\nimport SplitButton from './SplitButton';\r\nimport ContinuousSlider from './ContinuousSlider';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blue[300]\r\n        }\r\n    }\r\n})\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    constructor(props){\r\n        super([props]);\r\n        this.state = {\r\n            array:[],\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n            speed:4\r\n        };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updateWindowDimensions();\r\n        this.resetArray();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        this.setState({ \r\n            width: window.innerWidth, \r\n            height: window.innerHeight\r\n         });\r\n         this.resetArray();\r\n      }\r\n\r\n    resetArray(){\r\n        const array = [];\r\n        const noBars = Math.floor((0.6*this.state.width)/6);\r\n        const heightBars = Math.floor(0.85*this.state.height);\r\n        for(let i = 0; i<noBars; i++){\r\n            array.push(Math.floor(Math.random()*(heightBars-5+1)+5));\r\n        }\r\n        this.setState({\r\n            array\r\n        });\r\n    }\r\n\r\n    mergeSort(){\r\n        const animations = getMergeSortAnimations(this.state.array);\r\n        for(let i = 0; i<animations.length; i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i%3 !== 2;\r\n            if(isColorChange){\r\n                const [barOneIndex,barTwoIndex] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIndex].style;\r\n                const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                const color = i % 3 === 0 ? 'red' : '#64b5f6';\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * this.state.speed);\r\n            }\r\n            else{\r\n                setTimeout(() => {\r\n                    const [barOneIndex, newHeight] = animations[i]\r\n                    const barOneStyle =  arrayBars[barOneIndex].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                }, i * this.state.speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    quickSort(){\r\n        const animations = getQuickSortAnimations(this.state.array);\r\n        for(let i = 0; i<animations.length; i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 4 !== 2 && i % 4 !== 3;\r\n            if(isColorChange){\r\n                const [barOneIndex,barTwoIndex] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIndex].style;\r\n                const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                const color = i % 4 === 0 ? 'red' : '#64b5f6';\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * this.state.speed);\r\n            }\r\n            else{\r\n                setTimeout(() => {\r\n                    const [barOneIndex, barTwoIndex] = animations[i]\r\n                    const barOneStyle =  arrayBars[barOneIndex].style;\r\n                    const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                    const barOneHeight = barOneStyle.height;\r\n                    const barTwoHeight = barTwoStyle.height;\r\n                    barOneStyle.height = barTwoHeight;\r\n                    barTwoStyle.height = barOneHeight;\r\n                }, i * this.state.speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    heapSort(){\r\n        const animations = getHeapSortAnimations(this.state.array);\r\n        console.log(animations, \"Animations\");\r\n        for(let i = 0; i<animations.length; i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 5 !== 4;\r\n            if(isColorChange){\r\n                const [barOneIndex,barTwoIndex] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIndex].style;\r\n                const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                const color = (i % 5 === 0 || i % 5 === 2) ? 'red' : '#64b5f6';\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * this.state.speed);\r\n            }\r\n            else{\r\n                setTimeout(() => {\r\n                    const [barOneIndex, barTwoIndex] = animations[i]\r\n                    const barOneStyle =  arrayBars[barOneIndex].style;\r\n                    const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                    const barOneHeight = barOneStyle.height;\r\n                    const barTwoHeight = barTwoStyle.height;\r\n                    barOneStyle.height = barTwoHeight;\r\n                    barTwoStyle.height = barOneHeight;\r\n                }, i * this.state.speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    bubbleSort(){\r\n        const animations = getBubbleSortAnimations(this.state.array);\r\n        for(let i = 0; i<animations.length; i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if(isColorChange){\r\n                const [barOneIndex,barTwoIndex] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIndex].style;\r\n                const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                const color = i % 3 === 0 ? 'red' : '#64b5f6';\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * this.state.speed);\r\n            }\r\n            else{\r\n                setTimeout(() => {\r\n                    const [barOneIndex, barTwoIndex] = animations[i]\r\n                    const barOneStyle =  arrayBars[barOneIndex].style;\r\n                    const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                    const barOneHeight = barOneStyle.height;\r\n                    const barTwoHeight = barTwoStyle.height;\r\n                    barOneStyle.height = barTwoHeight;\r\n                    barTwoStyle.height = barOneHeight;\r\n                }, i * this.state.speed);\r\n            }\r\n        } \r\n    }\r\n\r\n    selectionSort(){\r\n        const animations = getSelectionSortAnimations(this.state.array);\r\n        for(let i = 0; i<animations.length; i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if(isColorChange){\r\n                const [barOneIndex,barTwoIndex] = animations[i];\r\n                const barOneStyle = arrayBars[barOneIndex].style;\r\n                const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                const color = i % 3 === 0 ? 'red' : '#64b5f6';\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * this.state.speed);\r\n            }\r\n            else{\r\n                setTimeout(() => {\r\n                    const [barOneIndex, barTwoIndex] = animations[i]\r\n                    const barOneStyle =  arrayBars[barOneIndex].style;\r\n                    const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                    const barOneHeight = barOneStyle.height;\r\n                    const barTwoHeight = barTwoStyle.height;\r\n                    barOneStyle.height = barTwoHeight;\r\n                    barTwoStyle.height = barOneHeight;\r\n                }, i * this.state.speed);\r\n            }\r\n        } \r\n    }\r\n\r\n    insertionSort(){\r\n        const animations = getInsertionSortAnimations(this.state.array);\r\n        for(let i = 0; i<animations.length; i++){\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if(isColorChange){\r\n                const [barOneIndex,barTwoIndex] = animations[i];\r\n                if(barOneIndex !== -1 && barTwoIndex !== -1){\r\n                    const barOneStyle = arrayBars[barOneIndex].style;\r\n                    const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                    const color = i % 3 === 0 ? 'red' : '#64b5f6';\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = color;\r\n                        barTwoStyle.backgroundColor = color;\r\n                    }, i * this.state.speed);\r\n                }\r\n            }\r\n            else{\r\n                setTimeout(() => {\r\n                    const [barOneIndex, barTwoIndex] = animations[i]\r\n                    const barOneStyle =  arrayBars[barOneIndex].style;\r\n                    const barTwoStyle = arrayBars[barTwoIndex].style;\r\n                    const barOneHeight = barOneStyle.height;\r\n                    const barTwoHeight = barTwoStyle.height;\r\n                    barOneStyle.height = barTwoHeight;\r\n                    barTwoStyle.height = barOneHeight;\r\n                }, i * this.state.speed);\r\n            }\r\n        } \r\n    }\r\n\r\n    changeAnimationSpeed(value){\r\n        console.log(this.state)\r\n        this.setState({\r\n            speed:value\r\n        });\r\n        console.log(value);\r\n    }\r\n\r\n    render(){\r\n        const {array} = this.state;\r\n        return(\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className=\"container\">\r\n                    <div className=\"array-container\">\r\n                        {array.map((val, i) => {\r\n                            return(\r\n                                <div className=\"array-bar\" key = {i} style ={{height: `${val}px`}}> </div>\r\n                            );                    \r\n                        })}\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <div className=\"button\">\r\n                            <Button variant=\"contained\" onClick={() => this.resetArray()}>Generate a new Array!</Button>\r\n                        </div>\r\n                        <div className=\"button\">\r\n                            <SplitButton quickSort={() => this.quickSort()} mergeSort={() => this.mergeSort()} heapSort={() => this.heapSort()} bubbleSort={() =>   this.bubbleSort()} selectionSort={() => this.selectionSort()} insertionSort={() => this.insertionSort()}></SplitButton>\r\n                        </div>\r\n                        <div className=\"element\">\r\n                            <ContinuousSlider changeSpeed={this.changeAnimationSpeed.bind(this)} defaultValue={this.state.speed}/>\r\n                        </div>\r\n                    </div> \r\n                </div>         \r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}